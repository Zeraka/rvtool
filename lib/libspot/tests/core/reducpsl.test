#! /bin/sh
# -*- coding: utf-8 -*-
# Copyright (C) 2011, 2012, 2015, 2016 Laboratoire de Recherche et
# DÃ©veloppement de l'Epita (LRDE).
#
# This file is part of Spot, a model checking library.
#
# Spot is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# Spot is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


# Check for the reduc visitor.
. ./defs || exit 1

set -e

# Do the first run through valgrind, and the rest without
run 0 randltl --psl --seed 0 --tree-size 10 a b c -n 100 > formulas
randltl --psl --seed 100 --tree-size 10 a b c d e f -n 100 >> formulas
for i in 12 14 16 18 20; do
  randltl --psl --seed 0   --tree-size $i a b c       -n 100 >> formulas
  randltl --psl --seed 100 --tree-size $i a b c d e f -n 100 >> formulas
done

for opt in 0 1 2 3 7 8 9; do
    case $opt in
        # Running valgrind on all these runs would be too slow.  Only
        # do that for 3 (all basic reductions) and 8 (containment
        # checks).
        3|7) run 0 ../reduc -f -h $opt formulas;;
        *)         ../reduc -f -h $opt formulas;;
    esac
done
