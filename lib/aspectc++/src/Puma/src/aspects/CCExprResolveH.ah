// This file is part of PUMA.
// Copyright (C) 1999-2003  The PUMA developer team.
//                                                                
// This program is free software;  you can redistribute it and/or 
// modify it under the terms of the GNU General Public License as 
// published by the Free Software Foundation; either version 2 of 
// the License, or (at your option) any later version.            
//                                                                
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of 
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  
// GNU General Public License for more details.                   
//                                                                
// You should have received a copy of the GNU General Public      
// License along with this program; if not, write to the Free     
// Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, 
// MA  02111-1307  USA                                            

#ifndef __CCExprResolveH_ah__
#define __CCExprResolveH_ah__

// This aspect inserts resolve member functions into all syntax tree classes
// that represent expressions. As the function is virtual, an efficient
// run-time switch over the node type is implemented.

namespace Puma {
  class CCSemExpr;
}

namespace Puma {
  slice class CCExprResolveCTree {
  public:
    virtual Puma::CTypeInfo *resolve(Puma::CCSemExpr &sem_expr, Puma::CTree *base);
  };
  slice class CCExprResolveExpr {    
  public:
    virtual Puma::CTypeInfo *resolve(Puma::CCSemExpr &sem_expr, Puma::CTree *base);
  };
}

aspect CCExprResolve {
  advice "Puma::CTree" : slice Puma::CCExprResolveCTree;
  advice
     derived ("Puma::CT_Expression"||"Puma::CT_SimpleName"||"Puma::CT_String") :
     slice Puma::CCExprResolveExpr;
};

#endif /* __CCExprResolveH_ah__ */
