// This file is part of PUMA.
// Copyright (C) 1999-2003  The PUMA developer team.
//                                                                
// This program is free software;  you can redistribute it and/or 
// modify it under the terms of the GNU General Public License as 
// published by the Free Software Foundation; either version 2 of 
// the License, or (at your option) any later version.            
//                                                                
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of 
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  
// GNU General Public License for more details.                   
//                                                                
// You should have received a copy of the GNU General Public      
// License along with this program; if not, write to the Free     
// Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, 
// MA  02111-1307  USA                                            

#ifndef __WinFriend__
#define __WinFriend__

/********************************************************/
/* Win friend declaration syntax without class key.     */
/********************************************************/

namespace Puma {
  class CCSyntax;
  class CCBuilder;
  class CTree;
} // namespace Puma

#include "Puma/CTokens.h"

aspect WinFriend {
  /********************************************************/
  /* Win friend declaration syntax                        */
  /********************************************************/

  // parse the win friend declaration syntax
  advice execution ("% Puma::CCSyntax::rule_member_decl1()") : around () {
    tjp->proceed ();
    Puma::CTree *&result = *(Puma::CTree**)tjp->result ();
    // 3: FRIEND  class_name  ;
    if (! result &&
        tjp->that ()->parse (Puma::TOK_FRIEND) &&
        tjp->that ()->class_name () &&
        tjp->that ()->parse (Puma::TOK_SEMI_COLON))
      result = tjp->that ()->semantic ().member_decl1 ();
  }
};

#endif /* __WinFriend__ */
