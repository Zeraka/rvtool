// This file is part of PUMA.
// Copyright (C) 1999-2003  The PUMA developer team.
//                                                                
// This program is free software;  you can redistribute it and/or 
// modify it under the terms of the GNU General Public License as 
// published by the Free Software Foundation; either version 2 of 
// the License, or (at your option) any later version.            
//                                                                
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of 
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  
// GNU General Public License for more details.                   
//                                                                
// You should have received a copy of the GNU General Public      
// License along with this program; if not, write to the Free     
// Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, 
// MA  02111-1307  USA                                            

#ifndef __SyntaxBuilder_ah__
#define __SyntaxBuilder_ah__

#include "Puma/Syntax.h"
//#include "Puma/Builder.h"

aspect SyntaxBuilder {

  advice Puma::Syntax::rule_call() : order ("SyntaxState", "SyntaxBuilder");

  advice Puma::Syntax::rule_call() : around () {
    tjp->proceed ();
    if (*tjp->result ()) {
      Puma::CTree *tree = JoinPoint::Target::build (*tjp->arg<0>());
      if (tree) {
        tjp->that()->builder().forget_state();
        tjp->that()->builder().Push(tree);
      }
      else
        *tjp->result () = false;
    }
  }

  advice execution("Puma::Syntax::State Puma::Syntax::save_state ()") : after() {
    tjp->that()->builder().save_state();
  }

  advice execution("void Puma::Syntax::restore_state (...)") : after() {
    tjp->that()->builder().restore_state();
  }
};

#endif /* __SyntaxBuilder_ah__ */
