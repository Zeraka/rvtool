.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.
.TH GENLTL "1" "September 2019" "genltl (spot) 2.8.2" "User Commands"
.SH NAME
genltl \- generate LTL formulas from scalable patterns
.SH SYNOPSIS
.B genltl
[\fI\,OPTION\/\fR...]
.SH DESCRIPTION
.\" Add any additional description here
.PP
Generate temporal logic formulas from predefined patterns.
.SS "Pattern selection:"
.TP
\fB\-\-and\-f\fR=\fI\,RANGE\/\fR, \fB\-\-gh\-e\fR=\fI\,RANGE\/\fR
F(p1)&F(p2)&...&F(pn)
.TP
\fB\-\-and\-fg\fR=\fI\,RANGE\/\fR
FG(p1)&FG(p2)&...&FG(pn)
.TP
\fB\-\-and\-gf\fR=\fI\,RANGE\/\fR, \fB\-\-ccj\-phi\fR=\fI\,RANGE\/\fR, \fB\-\-gh\-c2\fR=\fI\,RANGE\/\fR
GF(p1)&GF(p2)&...&GF(pn)
.TP
\fB\-\-ccj\-alpha\fR=\fI\,RANGE\/\fR
F(p1&F(p2&F(p3&...F(pn)))) &
F(q1&F(q2&F(q3&...F(qn))))
.TP
\fB\-\-ccj\-beta\fR=\fI\,RANGE\/\fR
F(p&X(p&X(p&...X(p)))) & F(q&X(q&X(q&...X(q))))
.TP
\fB\-\-ccj\-beta\-prime\fR=\fI\,RANGE\/\fR F(p&(Xp)&(XXp)&...(X...X(p))) &
F(q&(Xq)&(XXq)&...(X...X(q)))
.TP
\fB\-\-dac\-patterns\fR[=\fI\,RANGE\/\fR], \fB\-\-spec\-patterns\fR[=\fI\,RANGE\/\fR]
Dwyer et al. [FMSP'98] Spec. Patterns for LTL
(range should be included in 1..55)
.TP
\fB\-\-eh\-patterns\fR[=\fI\,RANGE\/\fR]
Etessami and Holzmann [Concur'00] patterns (range
should be included in 1..12)
.TP
\fB\-\-fxg\-or\fR=\fI\,RANGE\/\fR
F(p0 | XG(p1 | XG(p2 | ... XG(pn))))
.TP
\fB\-\-gf\-equiv\fR=\fI\,RANGE\/\fR
(GFa1 & GFa2 & ... & GFan) <\-> GFz
.TP
\fB\-\-gf\-equiv\-xn\fR=\fI\,RANGE\/\fR
GF(a <\-> X^n(a))
.TP
\fB\-\-gf\-implies\fR=\fI\,RANGE\/\fR
(GFa1 & GFa2 & ... & GFan) \-> GFz
.TP
\fB\-\-gf\-implies\-xn\fR=\fI\,RANGE\/\fR
GF(a \-> X^n(a))
.TP
\fB\-\-gh\-q\fR=\fI\,RANGE\/\fR
(F(p1)|G(p2))&(F(p2)|G(p3))&...&(F(pn)|G(p{n+1}))
.TP
\fB\-\-gh\-r\fR=\fI\,RANGE\/\fR
(GF(p1)|FG(p2))&(GF(p2)|FG(p3))&...
&(GF(pn)|FG(p{n+1}))
.TP
\fB\-\-go\-theta\fR=\fI\,RANGE\/\fR
!((GF(p1)&GF(p2)&...&GF(pn)) \-> G(q\->F(r)))
.TP
\fB\-\-gxf\-and\fR=\fI\,RANGE\/\fR
G(p0 & XF(p1 & XF(p2 & ... XF(pn))))
.TP
\fB\-\-hkrss\-patterns\fR[=\fI\,RANGE\/\fR], \fB\-\-liberouter\-patterns\fR[=\fI\,RANGE\/\fR]
Holeƒçek et al. patterns from the Liberouter
project (range should be included in 1..55)
.TP
\fB\-\-kr\-n\fR=\fI\,RANGE\/\fR
linear formula with doubly exponential DBA
.TP
\fB\-\-kr\-nlogn\fR=\fI\,RANGE\/\fR
quasilinear formula with doubly exponential DBA
.TP
\fB\-\-kv\-psi\fR=\fI\,RANGE\/\fR, \fB\-\-kr\-n2\fR=\fI\,RANGE\/\fR
quadratic formula with doubly exponential DBA
.TP
\fB\-\-ms\-example\fR=\fI\,RANGE\/\fR[\fI\,\/\fR,RANGE]
GF(a1&X(a2&X(a3&...Xan)))&F(b1&F(b2&F(b3&...&Xbm)))
.TP
\fB\-\-ms\-phi\-h\fR=\fI\,RANGE\/\fR
FG(a|b)|FG(!a|Xb)|FG(a|XXb)|FG(!a|XXXb)|...
.TP
\fB\-\-ms\-phi\-r\fR=\fI\,RANGE\/\fR
(FGa{n}&GFb{n})|((FGa{n\-1}|GFb{n\-1})&(...))
.TP
\fB\-\-ms\-phi\-s\fR=\fI\,RANGE\/\fR
(FGa{n}|GFb{n})&((FGa{n\-1}&GFb{n\-1})|(...))
.TP
\fB\-\-or\-fg\fR=\fI\,RANGE\/\fR, \fB\-\-ccj\-xi\fR=\fI\,RANGE\/\fR
FG(p1)|FG(p2)|...|FG(pn)
.TP
\fB\-\-or\-g\fR=\fI\,RANGE\/\fR, \fB\-\-gh\-s\fR=\fI\,RANGE\/\fR
G(p1)|G(p2)|...|G(pn)
.TP
\fB\-\-or\-gf\fR=\fI\,RANGE\/\fR, \fB\-\-gh\-c1\fR=\fI\,RANGE\/\fR
GF(p1)|GF(p2)|...|GF(pn)
.TP
\fB\-\-p\-patterns\fR[=\fI\,RANGE\/\fR], \fB\-\-beem\-patterns\fR[=\fI\,RANGE\/\fR], \fB\-\-p\fR[=\fI\,RANGE\/\fR]
Pel√°nek [Spin'07] patterns from BEEM (range
should be included in 1..20)
.TP
\fB\-\-pps\-arbiter\-standard\fR=\fI\,RANGE\/\fR
Arbiter with n clients that sent requests (ri) and
receive grants (gi).  Standard semantics.
.TP
\fB\-\-pps\-arbiter\-strict\fR=\fI\,RANGE\/\fR
Arbiter with n clients that sent requests
(ri) and receive grants (gi).  Strict semantics.
.TP
\fB\-\-r\-left\fR=\fI\,RANGE\/\fR
(((p1 R p2) R p3) ... R pn)
.TP
\fB\-\-r\-right\fR=\fI\,RANGE\/\fR
(p1 R (p2 R (... R pn)))
.TP
\fB\-\-rv\-counter\fR=\fI\,RANGE\/\fR
n\-bit counter
.TP
\fB\-\-rv\-counter\-carry\fR=\fI\,RANGE\/\fR
n\-bit counter w/ carry
.TP
\fB\-\-rv\-counter\-carry\-linear\fR=\fI\,RANGE\/\fR
n\-bit counter w/ carry (linear size)
.TP
\fB\-\-rv\-counter\-linear\fR=\fI\,RANGE\/\fR
n\-bit counter (linear size)
.TP
\fB\-\-sb\-patterns\fR[=\fI\,RANGE\/\fR]
Somenzi and Bloem [CAV'00] patterns (range should
be included in 1..27)
.TP
\fB\-\-sejk\-f\fR=\fI\,RANGE\/\fR[\fI\,\/\fR,RANGE] f(0,j)=(GFa0 U X^j(b)), f(i,j)=(GFai U
G(f(i\-1,j)))
.TP
\fB\-\-sejk\-j\fR=\fI\,RANGE\/\fR
(GFa1&...&GFan) \-> (GFb1&...&GFbn)
.TP
\fB\-\-sejk\-k\fR=\fI\,RANGE\/\fR
(GFa1|FGb1)&...&(GFan|FGbn)
.TP
\fB\-\-sejk\-patterns\fR[=\fI\,RANGE\/\fR]
œÜ‚\e\&',œÜ‚\e\e,œÜ‚\e\- from Sikert et al's [CAV'16]
paper (range should be included in 1..3)
.TP
\fB\-\-tv\-f1\fR=\fI\,RANGE\/\fR
G(p \-> (q | Xq | ... | XX...Xq)
.TP
\fB\-\-tv\-f2\fR=\fI\,RANGE\/\fR
G(p \-> (q | X(q | X(... | Xq)))
.TP
\fB\-\-tv\-g1\fR=\fI\,RANGE\/\fR
G(p \-> (q & Xq & ... & XX...Xq)
.TP
\fB\-\-tv\-g2\fR=\fI\,RANGE\/\fR
G(p \-> (q & X(q & X(... & Xq)))
.TP
\fB\-\-tv\-uu\fR=\fI\,RANGE\/\fR
G(p1 \-> (p1 U (p2 & (p2 U (p3 & (p3 U ...))))))
.TP
\fB\-\-u\-left\fR=\fI\,RANGE\/\fR, \fB\-\-gh\-u\fR=\fI\,RANGE\/\fR
(((p1 U p2) U p3) ... U pn)
.TP
\fB\-\-u\-right\fR=\fI\,RANGE\/\fR, \fB\-\-gh\-u2\fR=\fI\,RANGE\/\fR, \fB\-\-go\-phi\fR=\fI\,RANGE\/\fR
(p1 U (p2 U (... U pn)))
.PP
RANGE may have one of the following forms: 'INT', 'INT..INT', or '..INT'.
In the latter case, the missing number is assumed to be 1.
.SS "Output options:"
.TP
\fB\-0\fR, \fB\-\-zero\-terminated\-output\fR
separate output formulas with \e0 instead of \en
(for use with xargs \fB\-0\fR)
.TP
\fB\-8\fR, \fB\-\-utf8\fR
output using UTF\-8 characters
.TP
\fB\-\-format\fR=\fI\,FORMAT\/\fR, \fB\-\-stats\fR=\fI\,FORMAT\/\fR
specify how each line should be output (default:
"%f")
.TP
\fB\-l\fR, \fB\-\-lbt\fR
output in LBT's syntax
.TP
\fB\-\-latex\fR
output using LaTeX macros
.TP
\fB\-\-negative\fR, \fB\-\-negated\fR
output the negated versions of all formulas
.TP
\fB\-o\fR, \fB\-\-output\fR=\fI\,FORMAT\/\fR
send output to a file named FORMAT instead of
standard output.  The first formula sent to a file
truncates it unless FORMAT starts with '>>'.
.TP
\fB\-\-positive\fR
output the positive versions of all formulas (done
by default, unless \fB\-\-negative\fR is specified without
\fB\-\-positive\fR)
.TP
\fB\-p\fR, \fB\-\-full\-parentheses\fR
output fully\-parenthesized formulas
.TP
\fB\-s\fR, \fB\-\-spin\fR
output in Spin's syntax
.TP
\fB\-\-spot\fR
output in Spot's syntax (default)
.TP
\fB\-\-wring\fR
output in Wring's syntax
.PP
The FORMAT string passed to \fB\-\-format\fR may use the following interpreted
sequences:
.TP
%%
a single %
.TP
%b
the Boolean\-length of the formula (i.e., all
Boolean subformulas count as 1)
.TP
%f
the formula (in the selected syntax)
.TP
%F
the name of the pattern
.TP
%h, %[vw]h
the class of the formula is the Manna\-Pnueli
hierarchy ([v] replaces abbreviations by class
names, [w] for all compatible classes)
.TP
%L
the argument of the pattern
.TP
%[OP]n
the nesting depth of operator OP.  OP should be a
single letter denoting the operator to count, or
multiple letters to fuse several operators during
depth evaluation.  Add '~' to rewrite the formula
in negative normal form before counting.
.TP
%s
the length (or size) of the formula
.TP
%x, %[LETTERS]X, %[LETTERS]x
number of atomic propositions used in the
.TP
formula;
add LETTERS to list atomic propositions
.TP
with (n) no quoting, (s) occasional double\-quotes
with C\-style escape, (d) double\-quotes with
C\-style escape, (c) double\-quotes with CSV\-style
escape, (p) between parentheses, any extra
non\-alphanumeric character will be used to
separate propositions
.SS "Miscellaneous options:"
.TP
\fB\-\-help\fR
print this help
.TP
\fB\-\-version\fR
print program version
.PP
Mandatory or optional arguments to long options are also mandatory or optional
for any corresponding short options.
.SH BIBLIOGRAPHY
If you would like to give a reference to this tool in an article,
we suggest you cite the following paper:
.TP
\(bu
Alexandre Duret-Lutz: Manipulating LTL formulas using Spot 1.0.
Proceedings of ATVA'13.  LNCS 8172.
.PP
Prefixes used in pattern names refer to the following papers:
.TP
ccj
J. Cicho≈Ñ, A. Czubak, and A. Jasi≈Ñski: Minimal B√ºchi
Automata for Certain Classes of LTL Formulas.  Proceedings of DepCoS'09.
.TP
dac
M. B. Dwyer and G. S. Avrunin and J. C. Corbett: Property
Specification Patterns for Finite-state Verification.
Proceedings of FMSP'98.
.TP
eh
K. Etessami and G. J. Holzmann: Optimizing B√ºchi Automata.
Proceedings of Concur'00.  LNCS 1877.
.TP
gh
J. Geldenhuys and H. Hansen: Larger automata and less
work for LTL model checking.  Proceedings of Spin'06.  LNCS 3925.
.TP
hkrss
J. Holeƒçek, T. Kratochvila, V. ≈òeh√°k, D. ≈\ afr√°nek, and P. ≈\ imeƒçek:
Verification Results in Liberouter Project.  Tech. Report 03, CESNET, 2004.
.TP
go
P. Gastin and D. Oddoux: Fast LTL to B√ºchi Automata Translation.
Proceedings of CAV'01.  LNCS 2102.
.TP
kr
O. Kupferman and A. Rosenberg: The Blow-Up in Translating LTL to Deterministic
Automata.
Proceedings of MoChArt'10.  LNAI 6572.
.TP
kv
O. Kupferman and M. Y. Vardi: From Linear Time to Branching Time.
ACM Transactions on Computational Logic, 6(2):273-294, 2005.
.TP
ms
D. M√ºller and S. Sickert: LTL to Deterministic Emerson-Lei Automata.
Proceedings of GandALF'17.  EPTCS 256.
.TP
p
R. Pel√°nek: BEEM: benchmarks for explicit model checkers
Proceedings of Spin'07.  LNCS 4595.
.TP
pps
N. Piterman, A. Pnueli, and Y. Sa'ar: Synthesis of Reactive(1) Designs.
Proceedings of VMCAI'06.  LNCS 3855.
.TP
rv
K. Rozier and M. Vardi: LTL Satisfiability Checking.
Proceedings of Spin'07.  LNCS 4595.
.TP
sb
F. Somenzi and R. Bloem: Efficient B√ºchi Automata for LTL Formulae.
Proceedings of CAV'00.  LNCS 1855.
.TP
sejk
S. Sickert, J. Esparza, S. Jaax, and J. K≈ôet√≠nsk√Ω: Limit-Deterministic
B√ºchi Automata for Linear Temporal Logic.
Proceedings of CAV'16.  LNCS 9780.
.TP
tv
D. Tabakov and M. Y. Vardi: Optimized Temporal Monitors for SystemC.
Proceedings of RV'10.  LNCS 6418.
.SH "REPORTING BUGS"
Report bugs to <spot@lrde.epita.fr>.
.SH COPYRIGHT
Copyright \(co 2019  Laboratoire de Recherche et D√©veloppement de l'Epita.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
.br
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.SH "SEE ALSO"
.BR genaut (1),
.BR ltlfilt (1),
.BR randaut (1),
.BR randltl (1)
