.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.
.TH RANDAUT "1" "September 2019" "randaut (spot) 2.8.2" "User Commands"
.SH NAME
randaut \- generate random automata
.SH SYNOPSIS
.B randaut
[\fI\,OPTION\/\fR...] \fI\,N|PROP\/\fR...
.SH DESCRIPTION
.\" Add any additional description here
.PP
Generate random connected automata.
.PP
The automata are built over the atomic propositions named by PROPS...
or, if N is a nonnegative number, using N arbitrary names.
If the edge density is set to D, and the number of states to Q, the degree
of each state follows a normal distribution with mean 1+(Q\-1)D and
variance (Q\-1)D(1\-D).  In particular, for D=0 all states have a single
successor, while for D=1 all states are interconnected.
.SS "Generation:"
.TP
\fB\-a\fR, \fB\-\-acc\-probability\fR=\fI\,FLOAT\/\fR
probability that an edge belongs to one
acceptance set (0.2)
.TP
\fB\-A\fR, \fB\-\-acceptance\fR=\fI\,ACCEPTANCE\/\fR
specify the acceptance type of the automaton
.TP
\fB\-B\fR, \fB\-\-ba\fR
build a Buchi automaton (implies
\fB\-\-acceptance\fR=\fI\,Buchi\/\fR \fB\-\-state\-acc\fR)
.TP
\fB\-\-colored\fR
build an automaton in which each edge (or state if
combined with \fB\-S\fR) belong to a single acceptance
set
.TP
\fB\-D\fR, \fB\-\-deterministic\fR
build a complete, deterministic automaton
.TP
\fB\-e\fR, \fB\-\-density\fR=\fI\,FLOAT\/\fR
density of the edges (0.2)
.TP
\fB\-n\fR, \fB\-\-automata\fR=\fI\,INT\/\fR
number of automata to output (1)
use a negative value for unbounded generation
.TP
\fB\-Q\fR, \fB\-\-states\fR=\fI\,RANGE\/\fR
number of states to output (10)
.TP
\fB\-\-seed\fR=\fI\,INT\/\fR
seed for the random number generator (0)
.TP
\fB\-S\fR, \fB\-\-state\-based\-acceptance\fR, \fB\-\-sbacc\fR
used state\-based acceptance
.TP
\fB\-u\fR, \fB\-\-unique\fR
do not output the same automaton twice (same in
the sense that they are isomorphic)
.PP
RANGE may have one of the following forms: 'INT', 'INT..INT', or '..INT'.
In the latter case, the missing number is assumed to be 1.
.PP
ACCEPTANCE may be either a RANGE (in which case generalized Büchi is assumed),
or an arbitrary acceptance formula such as 'Fin(0)|Inf(1)&Fin(2)' in the same
syntax as in the HOA format, or one of the following patterns:
.IP
none
all
Buchi
co\-Buchi
generalized\-Buchi RANGE
generalized\-co\-Buchi RANGE
Rabin RANGE
Streett RANGE
generalized\-Rabin INT RANGE RANGE ... RANGE
parity (min|max|rand) (odd|even|rand) RANGE
random RANGE
random RANGE PROBABILITY
.PP
The random acceptance condition uses each set only once, unless a probability
(to reuse the set again every time it is used) is given.
.SS "Output format:"
.TP
\fB\-8\fR, \fB\-\-utf8\fR
enable UTF\-8 characters in output (ignored with
\fB\-\-lbtt\fR or \fB\-\-spin\fR)
.TP
\fB\-\-check\fR[=\fI\,PROP\/\fR]
test for the additional property PROP and output
the result in the HOA format (implies \fB\-H\fR).  PROP
may be any prefix of 'all' (default),
\&'unambiguous', 'stutter\-invariant', or
\&'strength'.
.TP
\fB\-d\fR, \fB\-\-dot\fR[=\fI\,1\/\fR|\fI\,a\/\fR|\fI\,A\/\fR|\fI\,b\/\fR|\fI\,B\/\fR|\fI\,c\/\fR|\fI\,C(COLOR)\/\fR|\fI\,e\/\fR|\fI\,f(FONT)\/\fR|\fI\,h\/\fR|\fI\,k\/\fR|\fI\,K\/\fR|\fI\,n\/\fR|\fI\,N\/\fR|\fI\,o\/\fR|\fI\,r\/\fR|\fI\,R\/\fR|\fI\,s\/\fR|\fI\,t\/\fR|\fI\,u\/\fR|\fI\,v\/\fR|\fI\,y\/\fR|\fI\,+INT\/\fR|\fI\,<INT\/\fR|\fI\,#\/\fR]
GraphViz's format.
Add letters for (1) force numbered states, (a)
show acceptance condition (default), (A) hide
acceptance condition, (b) acceptance sets as
bullets, (B) bullets except for Büchi/co\-Büchi
automata, (c) force circular nodes, (C) color
nodes with COLOR, (d) show origins when known, (e)
force elliptic nodes, (f(FONT)) use FONT, (g) hide
edge labels, (h) horizontal layout, (k) use state
labels when possible, (K) use transition labels
(default), (n) show name, (N) hide name, (o)
ordered transitions, (r) rainbow colors for
acceptance sets, (R) color acceptance sets by
Inf/Fin, (s) with SCCs, (t) force transition\-based
acceptance, (u) hide true states, (v) vertical
layout, (y) split universal edges by color, (+INT)
add INT to all set numbers, (<INT) display at most
INT states, (#) show internal edge numbers
.TP
\fB\-H\fR, \fB\-\-hoaf\fR[=\fI\,1.1\/\fR|\fI\,i\/\fR|\fI\,k\/\fR|\fI\,l\/\fR|\fI\,m\/\fR|\fI\,s\/\fR|\fI\,t\/\fR|\fI\,v\/\fR]
Output the automaton in HOA format
(default).  Add letters to select (1.1) version
1.1 of the format, (i) use implicit labels for
complete deterministic automata, (s) prefer
state\-based acceptance when possible [default],
(t) force transition\-based acceptance, (m) mix
state and transition\-based acceptance, (k) use
state labels when possible, (l) single\-line
output, (v) verbose properties
.TP
\fB\-\-lbtt\fR[=\fI\,t\/\fR]
LBTT's format (add =t to force transition\-based
acceptance even on Büchi automata)
.TP
\fB\-\-name\fR=\fI\,FORMAT\/\fR
set the name of the output automaton
.TP
\fB\-o\fR, \fB\-\-output\fR=\fI\,FORMAT\/\fR
send output to a file named FORMAT instead of
standard output.  The first automaton sent to a
file truncates it unless FORMAT starts with '>>'.
.TP
\fB\-q\fR, \fB\-\-quiet\fR
suppress all normal output
.TP
\fB\-s\fR, \fB\-\-spin\fR[=\fI\,6\/\fR|\fI\,c\/\fR]
Spin neverclaim (implies \fB\-\-ba\fR).  Add letters to
select (6) Spin's 6.2.4 style, (c) comments on
states
.TP
\fB\-\-stats\fR=\fI\,FORMAT\/\fR, \fB\-\-format\fR=\fI\,FORMAT\/\fR
output statistics about the automaton
.SS "Any FORMAT string may use the following interpreted sequences:"
.TP
%%
a single %
.TP
%a
number of acceptance sets
.TP
%c, %[LETTERS]c
number of SCCs; you may filter the SCCs to count
using the following LETTERS, possibly
concatenated: (a) accepting, (r) rejecting, (c)
complete, (v) trivial, (t) terminal, (w) weak,
(iw) inherently weak. Use uppercase letters to
negate them.
.TP
%d
1 if the output is deterministic, 0 otherwise
.TP
%e
number of reachable edges
.TP
%F
seed number
.TP
%g, %[LETTERS]g
acceptance condition (in HOA syntax); add brackets
to print an acceptance name instead and LETTERS to
tweak the format: (0) no parameters, (a)
accentuated, (b) abbreviated, (d) style used in
dot output, (g) no generalized parameter, (l)
recognize Street\-like and Rabin\-like, (m) no main
parameter, (p) no parity parameter, (o) name
unknown acceptance as 'other', (s) shorthand for
\&'lo0'.
.TP
%h
the automaton in HOA format on a single line (use
%[opt]h to specify additional options as in
\fB\-\-hoa\fR=\fI\,opt)\/\fR
.TP
%L
automaton number
.TP
%m
name of the automaton
.TP
%n
number of nondeterministic states in output
.TP
%p
1 if the output is complete, 0 otherwise
.TP
%r
wall\-clock time elapsed in seconds (excluding
parsing)
.TP
%R, %[LETTERS]R
CPU time (excluding parsing), in seconds; Add
LETTERS to restrict to(u) user time, (s) system
time, (p) parent process, or (c) children
processes.
.TP
%s
number of reachable states
.TP
%t
number of reachable transitions
.TP
%u, %[e]u
number of states (or [e]dges) with universal
branching
.TP
%u, %[LETTER]u
1 if the automaton contains some universal
branching (or a number of [s]tates or [e]dges with
universal branching)
.TP
%w
one word accepted by the output automaton
.TP
%x, %[LETTERS]x
number of atomic propositions declared in the
automaton;  add LETTERS to list atomic
propositions with (n) no quoting, (s) occasional
double\-quotes with C\-style escape, (d)
double\-quotes with C\-style escape, (c)
double\-quotes with CSV\-style escape, (p) between
parentheses, any extra non\-alphanumeric character
will be used to separate propositions
.SS "Miscellaneous options:"
.TP
\fB\-\-help\fR
print this help
.TP
\fB\-\-version\fR
print program version
.PP
Mandatory or optional arguments to long options are also mandatory or optional
for any corresponding short options.
.SH EXAMPLES
This builds a random neverclaim with 4 states and labeled using the two
atomic propositions "a" and "b":
.IP
\f(CW% randaut --spin -Q4 a b\fR
.PP
This builds three random, complete, and deterministic TGBA with 5 to 10
states, 1 to 3 acceptance sets, and three atomic propositions:
.IP
\f(CW% randaut -n3 -D -H -Q5..10 -A1..3 3\fR
.PP
Build 3 random, complete, and deterministic Rabin automata
with 2 to 3 acceptance pairs, state\-based acceptance, 8 states,
a high density of edges, and 3 to 4 atomic propositions:
.IP
\f(CW% randaut -n3 -D -H -Q8 -e.8 -S -A 'Rabin 2..3' 3..4\fR
.SH "REPORTING BUGS"
Report bugs to <spot@lrde.epita.fr>.
.SH COPYRIGHT
Copyright \(co 2019  Laboratoire de Recherche et Développement de l'Epita.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
.br
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.SH "SEE ALSO"
.BR genltl (1),
.BR genaut (1),
.BR randltl (1),
.BR autfilt (1)
