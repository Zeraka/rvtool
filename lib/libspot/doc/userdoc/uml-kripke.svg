<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="640px" preserveAspectRatio="none" style="width:814px;height:640px;" version="1.1" viewBox="0 0 814 640" width="814px" zoomAndPan="magnify"><defs><filter height="300%" id="fw7uff6oy34di" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--cluster spot--><polygon fill="#FFFFFF" filter="url(#fw7uff6oy34di)" points="14,16,55,16,62,38.2969,792,38.2969,792,455,14,455,14,16" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="14" x2="62" y1="38.2969" y2="38.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="35" x="18" y="30.9951">spot</text><!--cluster what we have to implement--><path d="M100.1175,481.6072 C112.2696,461.3487 124.8167,464.7842 137.543,481.0183 C154.076,460.9557 167.5569,458.6384 181.6027,483.4598 C195.3602,460.8779 213.3764,463.4942 226.626,483.9906 C235.8524,457.1311 260.6689,458.6944 275.423,478.169 C290.0975,460.1085 310.2666,458.7412 320.6611,482.7692 C334.746,460.249 351.6396,457.721 367.2423,481.2332 C378.0558,462.7197 390.9384,456.754 406.3866,476.4903 C426.7614,455.6077 441.8415,456.4872 455.3547,483.5049 C465.1352,462.8985 479.7616,462.2908 494.4903,478.2019 C510.52,455.2551 531.7065,458.1372 542.3012,483.5727 C551.8918,456.4226 574.8186,456.8168 589.6415,478.5004 C602.2038,462.6718 618.2382,462.9412 627.5167,482.0593 C640.7949,457.689 659.5921,464.4 672.3747,482.5817 C689.0618,462.9102 710.4617,459.1347 723,487 C724.6818,484.7443 726.7821,485.5392 727.8154,487.7061 C751.8391,501.3728 758.001,524.9767 732.1762,542.6031 C749.7363,568.1178 749.3079,587.339 716,598 C716.85,597.2001 717.5412,597.6796 717.8319,598.5967 C708.4055,620.5047 692.8968,621.506 678.4999,603.4939 C663.4159,627.4068 644.4433,619.921 632.6302,600.0659 C615.6718,621.4878 600.5194,625.2621 584.6436,598.977 C572.415,622.9548 559.1639,628.0763 539.778,605.9405 C528.6504,628.3198 507.4347,627.3931 496.3667,605.8815 C481.4399,623.6322 461.2003,619.9171 451.3272,599.861 C442.7742,626.1274 421.6974,623.6545 406.2929,607.0599 C394.4293,625.7197 376.5648,623.7807 366.9847,604.6825 C351.3815,628.4838 326.5711,626.9091 315.8123,599.812 C306.5641,620.8264 286.8179,623.2965 271.5336,606.9697 C253.7022,626.8531 237.8273,620.3898 226.9943,599.3525 C214.3378,618.6805 199.3796,619.9079 183.2927,603.554 C170.5777,621.2231 152.0446,621.5856 141.3907,601.2797 C121.6369,626.3645 94.4625,622.3691 85,591 C88.19,587.8839 91.7118,588.5806 92.7032,593.1918 C67.6846,585.9183 59.7947,560.7132 79.392,541.8682 C58.712,515.7965 58.154,494.96 92,480 C95.3699,477.0789 98.2693,476.8429 100.1175,481.6072 " fill="#FFFFFF" style="stroke: #000000; stroke-width: 1.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="219" x="294.5" y="497.9951">what we have to implement</text><!--class twa--><rect fill="#FEFECE" filter="url(#fw7uff6oy34di)" height="216.0586" id="twa" style="stroke: #A80036; stroke-width: 1.5;" width="349" x="221.5" y="51"/><ellipse cx="380.25" cy="67" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M380.3594,62.3438 L379.2031,67.4219 L381.5313,67.4219 L380.3594,62.3438 Z M378.875,60.1094 L381.8594,60.1094 L385.2188,72.5 L382.7656,72.5 L382,69.4375 L378.7188,69.4375 L377.9688,72.5 L375.5313,72.5 L378.875,60.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="23" x="400.75" y="71.1543">twa</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="222.5" x2="569.5" y1="83" y2="83"/><polygon fill="none" points="232.5,89.9023,236.5,93.9023,232.5,97.9023,228.5,93.9023" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="241.5" y="97.2104">twa_succ_iterator* iter_cache_</text><polygon fill="none" points="232.5,102.707,236.5,106.707,232.5,110.707,228.5,106.707" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="241.5" y="110.0151">bdd_dict_ptr dict_</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="222.5" x2="569.5" y1="116.6094" y2="116.6094"/><polygon fill="#FFFF44" points="232.5,123.5117,236.5,127.5117,232.5,131.5117,228.5,127.5117" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="241.5" y="130.8198">twa(const bdd_dict_ptr&amp;)</text><ellipse cx="232.5" cy="158.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="121" x="241.5" y="160.4292">state* get_init_state()</text><ellipse cx="232.5" cy="170.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="201" x="241.5" y="173.2339">twa_succ_iterator* succ_iter(state*)</text><ellipse cx="232.5" cy="183.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="241.5" y="186.0386">internal::succ_iterable succ(const state*)</text><ellipse cx="232.5" cy="196.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="241.5" y="198.8433">void release_iter(twa_succ_iterator*)</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="222.5" x2="364.5" y1="143.8164" y2="143.8164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="364.5" y="147.1245">exploration</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="427.5" x2="569.5" y1="143.8164" y2="143.8164"/><ellipse cx="232.5" cy="226.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="209" x="241.5" y="228.4526">std::string format_state(const state*)</text><ellipse cx="232.5" cy="238.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="241.5" y="241.2573">state* project_state(const state*, const const_twa_ptr&amp;)</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="222.5" x2="343" y1="211.8398" y2="211.8398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="343" y="215.1479">state manipulation</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="449" x2="569.5" y1="211.8398" y2="211.8398"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="222.5" x2="322.5" y1="254.2539" y2="254.2539"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="322.5" y="257.562">other methods not shown</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="469.5" x2="569.5" y1="254.2539" y2="254.2539"/><!--class twa_succ_iterator--><rect fill="#FEFECE" filter="url(#fw7uff6oy34di)" height="150.4375" id="twa_succ_iterator" style="stroke: #A80036; stroke-width: 1.5;" width="156" x="30" y="84"/><ellipse cx="51.3" cy="100" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M51.4094,95.3438 L50.2531,100.4219 L52.5813,100.4219 L51.4094,95.3438 Z M49.925,93.1094 L52.9094,93.1094 L56.2688,105.5 L53.8156,105.5 L53.05,102.4375 L49.7688,102.4375 L49.0188,105.5 L46.5813,105.5 L49.925,93.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="110" x="66.7" y="104.1543">twa_succ_iterator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="31" x2="185" y1="116" y2="116"/><ellipse cx="41" cy="144.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="58" x="50" y="147.0151">bool first()</text><ellipse cx="41" cy="157.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="61" x="50" y="159.8198">bool next()</text><ellipse cx="41" cy="170.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="64" x="50" y="172.6245">bool done()</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="31" x2="84.5" y1="130.4023" y2="130.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="84.5" y="133.7104">iteration</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="131.5" x2="185" y1="130.4023" y2="130.4023"/><ellipse cx="41" cy="199.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="97" x="50" y="202.2339">const state* dst()</text><ellipse cx="41" cy="212.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="60" x="50" y="215.0386">bdd cond()</text><ellipse cx="41" cy="225.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="130" x="50" y="227.8433">acc_cond::mark_t acc()</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="31" x2="79" y1="185.6211" y2="185.6211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="79" y="188.9292">inspection</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="137" x2="185" y1="185.6211" y2="185.6211"/><!--class state--><rect fill="#FEFECE" filter="url(#fw7uff6oy34di)" height="112.0234" id="state" style="stroke: #A80036; stroke-width: 1.5;" width="170" x="606" y="103"/><ellipse cx="670.75" cy="119" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M670.8594,114.3438 L669.7031,119.4219 L672.0313,119.4219 L670.8594,114.3438 Z M669.375,112.1094 L672.3594,112.1094 L675.7188,124.5 L673.2656,124.5 L672.5,121.4375 L669.2188,121.4375 L668.4688,124.5 L666.0313,124.5 L669.375,112.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="32" x="691.25" y="123.1543">state</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="607" x2="775" y1="135" y2="135"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="607" x2="775" y1="143" y2="143"/><ellipse cx="617" cy="154.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="144" x="626" y="157.2104">int compare(const state*)</text><ellipse cx="617" cy="167.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="71" x="626" y="170.0151">size_t hash()</text><ellipse cx="617" cy="180.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="76" x="626" y="182.8198">state* clone()</text><ellipse cx="617" cy="193.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="626" y="195.6245">void destroy()</text><polygon fill="#FFFF44" points="617,201.1211,621,205.1211,617,209.1211,613,205.1211" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="626" y="208.4292">~state()</text><!--class kripke--><rect fill="#FEFECE" filter="url(#fw7uff6oy34di)" height="73.6094" id="kripke" style="stroke: #A80036; stroke-width: 1.5;" width="212" x="290" y="346"/><ellipse cx="372.75" cy="362" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M372.8594,357.3438 L371.7031,362.4219 L374.0313,362.4219 L372.8594,357.3438 Z M371.375,355.1094 L374.3594,355.1094 L377.7188,367.5 L375.2656,367.5 L374.5,364.4375 L371.2188,364.4375 L370.4688,367.5 L368.0313,367.5 L371.375,355.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="38" x="393.25" y="366.1543">kripke</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="291" x2="501" y1="378" y2="378"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="291" x2="501" y1="386" y2="386"/><ellipse cx="301" cy="397.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="310" y="400.2104">fair_kripke(const bdd_dict_ptr&amp;)</text><ellipse cx="301" cy="410.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="186" x="310" y="413.0151">bdd state_condition(const state*)</text><!--class kripke_succ_iterator--><rect fill="#FEFECE" filter="url(#fw7uff6oy34di)" height="112.0234" id="kripke_succ_iterator" style="stroke: #A80036; stroke-width: 1.5;" width="214" x="41" y="327"/><ellipse cx="81.65" cy="343" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M81.7594,338.3438 L80.6031,343.4219 L82.9313,343.4219 L81.7594,338.3438 Z M80.275,336.1094 L83.2594,336.1094 L86.6188,348.5 L84.1656,348.5 L83.4,345.4375 L80.1188,345.4375 L79.3688,348.5 L76.9313,348.5 L80.275,336.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="125" x="101.35" y="347.1543">kripke_succ_iterator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="42" x2="254" y1="359" y2="359"/><polygon fill="none" points="52,365.9023,56,369.9023,52,373.9023,48,369.9023" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="61" y="373.2104">bdd cond_</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="42" x2="254" y1="379.8047" y2="379.8047"/><ellipse cx="52" cy="391.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="61" y="394.0151">kripke_succ_iterator(const bdd&amp;)</text><ellipse cx="52" cy="404.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="61" y="406.8198">void recycle(const bdd&amp;)</text><ellipse cx="52" cy="417.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="61" y="419.6245">bdd cond()</text><ellipse cx="52" cy="430.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="61" y="432.4292">acc_cond::mark_t acc()</text><!--class demo_kripke--><rect fill="#FEFECE" filter="url(#fw7uff6oy34di)" height="99.2188" id="demo_kripke" style="stroke: #A80036; stroke-width: 1.5;" width="240" x="276" y="499"/><ellipse cx="352.25" cy="515" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M355.2188,520.6406 Q354.6406,520.9375 354,521.0781 Q353.3594,521.2344 352.6563,521.2344 Q350.1563,521.2344 348.8281,519.5938 Q347.5156,517.9375 347.5156,514.8125 Q347.5156,511.6875 348.8281,510.0313 Q350.1563,508.375 352.6563,508.375 Q353.3594,508.375 354,508.5313 Q354.6563,508.6875 355.2188,508.9844 L355.2188,511.7031 Q354.5938,511.125 354,510.8594 Q353.4063,510.5781 352.7813,510.5781 Q351.4375,510.5781 350.75,511.6563 Q350.0625,512.7188 350.0625,514.8125 Q350.0625,516.9063 350.75,517.9844 Q351.4375,519.0469 352.7813,519.0469 Q353.4063,519.0469 354,518.7813 Q354.5938,518.5 355.2188,517.9219 L355.2188,520.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="79" x="372.75" y="519.1543">demo_kripke</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="277" x2="515" y1="531" y2="531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="277" x2="515" y1="539" y2="539"/><ellipse cx="287" cy="550.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="296" y="553.2104">state* get_init_state()</text><ellipse cx="287" cy="563.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="296" y="566.0151">twa_succ_iterator* succ_iter(state*)</text><ellipse cx="287" cy="576.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="296" y="578.8198">std::string format_state(const state*)</text><ellipse cx="287" cy="589.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="296" y="591.6245">bdd state_condition(const state*)</text><!--class demo_succ_iterator--><rect fill="#FEFECE" filter="url(#fw7uff6oy34di)" height="99.2188" id="demo_succ_iterator" style="stroke: #A80036; stroke-width: 1.5;" width="155" x="85.5" y="499"/><ellipse cx="100.5" cy="515" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M103.4688,520.6406 Q102.8906,520.9375 102.25,521.0781 Q101.6094,521.2344 100.9063,521.2344 Q98.4063,521.2344 97.0781,519.5938 Q95.7656,517.9375 95.7656,514.8125 Q95.7656,511.6875 97.0781,510.0313 Q98.4063,508.375 100.9063,508.375 Q101.6094,508.375 102.25,508.5313 Q102.9063,508.6875 103.4688,508.9844 L103.4688,511.7031 Q102.8438,511.125 102.25,510.8594 Q101.6563,510.5781 101.0313,510.5781 Q99.6875,510.5781 99,511.6563 Q98.3125,512.7188 98.3125,514.8125 Q98.3125,516.9063 99,517.9844 Q99.6875,519.0469 101.0313,519.0469 Q101.6563,519.0469 102.25,518.7813 Q102.8438,518.5 103.4688,517.9219 L103.4688,520.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="123" x="114.5" y="519.1543">demo_succ_iterator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="86.5" x2="239.5" y1="531" y2="531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="86.5" x2="239.5" y1="539" y2="539"/><ellipse cx="96.5" cy="550.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="105.5" y="553.2104">bool first()</text><ellipse cx="96.5" cy="563.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="105.5" y="566.0151">bool next()</text><ellipse cx="96.5" cy="576.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="105.5" y="578.8198">bool done()</text><ellipse cx="96.5" cy="589.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="105.5" y="591.6245">const state* dst()</text><!--class demo_state--><rect fill="#FEFECE" filter="url(#fw7uff6oy34di)" height="86.4141" id="demo_state" style="stroke: #A80036; stroke-width: 1.5;" width="172" x="551" y="505.5"/><ellipse cx="595.75" cy="521.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M598.7188,527.1406 Q598.1406,527.4375 597.5,527.5781 Q596.8594,527.7344 596.1563,527.7344 Q593.6563,527.7344 592.3281,526.0938 Q591.0156,524.4375 591.0156,521.3125 Q591.0156,518.1875 592.3281,516.5313 Q593.6563,514.875 596.1563,514.875 Q596.8594,514.875 597.5,515.0313 Q598.1563,515.1875 598.7188,515.4844 L598.7188,518.2031 Q598.0938,517.625 597.5,517.3594 Q596.9063,517.0781 596.2813,517.0781 Q594.9375,517.0781 594.25,518.1563 Q593.5625,519.2188 593.5625,521.3125 Q593.5625,523.4063 594.25,524.4844 Q594.9375,525.5469 596.2813,525.5469 Q596.9063,525.5469 597.5,525.2813 Q598.0938,525 598.7188,524.4219 L598.7188,527.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="74" x="616.25" y="525.6543">demo_state</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="552" x2="722" y1="537.5" y2="537.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="552" x2="722" y1="545.5" y2="545.5"/><ellipse cx="562" cy="557.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="571" y="559.7104">int compare(const state*)</text><ellipse cx="562" cy="570.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="571" y="572.5151">size_t hash()</text><ellipse cx="562" cy="583.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77" x="571" y="585.3198">state* clone()</text><!--link twa to kripke--><path d="M396,287.3352 C396,308.7866 396,329.421 396,345.9992 " fill="none" id="twa-kripke" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="389.0001,287.0633,396,267.0632,403.0001,287.0632,389.0001,287.0633" style="stroke: #A80036; stroke-width: 1.0;"/><!--link twa_succ_iterator to kripke_succ_iterator--><path d="M124.9936,254.1644 C129.4109,278.9011 134.0284,304.7591 137.9575,326.7622 " fill="none" id="twa_succ_iterator-kripke_succ_iterator" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="118.0556,255.131,121.4307,234.2119,131.8376,252.6699,118.0556,255.131" style="stroke: #A80036; stroke-width: 1.0;"/><!--link state to demo_state--><path d="M680.4354,235.2024 C669.2639,315.7818 652.0332,440.0659 642.9981,505.2359 " fill="none" id="state-demo_state" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="673.5253,234.0699,683.2056,215.2207,687.3927,235.9925,673.5253,234.0699" style="stroke: #A80036; stroke-width: 1.0;"/><!--link kripke_succ_iterator to demo_succ_iterator--><path d="M154.9018,459.1502 C156.1254,472.65 157.3703,486.3857 158.5052,498.9076 " fill="none" id="kripke_succ_iterator-demo_succ_iterator" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="147.9123,459.581,153.0783,439.0308,161.8551,458.3172,147.9123,459.581" style="stroke: #A80036; stroke-width: 1.0;"/><!--link kripke to demo_kripke--><path d="M396,440.2335 C396,459.3376 396,480.453 396,498.9251 " fill="none" id="kripke-demo_kripke" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="389.0001,440.1415,396,420.1414,403.0001,440.1414,389.0001,440.1415" style="stroke: #A80036; stroke-width: 1.0;"/><!--
@startuml
  package spot {
    together {
      abstract class twa {
        #twa_succ_iterator* iter_cache_
        #bdd_dict_ptr dict_
        __
        #twa(const bdd_dict_ptr&)
        .. exploration ..
        +{abstract}state* get_init_state()
        +{abstract}twa_succ_iterator* succ_iter(state*)
        +internal::succ_iterable succ(const state*)
        +void release_iter(twa_succ_iterator*)
        .. state manipulation ..
        +{abstract} std::string format_state(const state*)
        +state* project_state(const state*, const const_twa_ptr&)
        .. other methods not shown..
      }
      abstract class twa_succ_iterator {
        .. iteration ..
        {abstract}+bool first()
        {abstract}+bool next()
        {abstract}+bool done()
        .. inspection ..
        {abstract}+const state* dst()
        {abstract}+bdd cond()
        {abstract}+acc_cond::mark_t acc()
      }

      abstract class state {
        +{abstract}int compare(const state*)
        +{abstract}size_t hash()
        +{abstract}state* clone()
        +void destroy()
        #~state()
      }
    }
    together {
      abstract class kripke {
        +fair_kripke(const bdd_dict_ptr&)
        +{abstract}bdd state_condition(const state*)
      }
      abstract class kripke_succ_iterator {
        #bdd cond_
        +kripke_succ_iterator(const bdd&)
        +void recycle(const bdd&)
        +bdd cond()
        +acc_cond::mark_t acc()
      }
    }
    twa <|- - kripke
    twa_succ_iterator <|- - kripke_succ_iterator
  }

  package "what we have to implement" <<Cloud>> {
      class demo_kripke {
        +state* get_init_state()
        +twa_succ_iterator* succ_iter(state*)
        +std::string format_state(const state*)
        +bdd state_condition(const state*)
      }
      class demo_succ_iterator {
        +bool first()
        +bool next()
        +bool done()
        +const state* dst()
      }
      class demo_state {
        +int compare(const state*)
        +size_t hash()
        +state* clone()
      }
  }
state <|- - demo_state
kripke_succ_iterator <|- - demo_succ_iterator
kripke <|- - demo_kripke
@enduml

PlantUML version 1.2019.08(Sat Jul 13 19:25:14 UTC 2019)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.4+11-post-Debian-1deb10u1
Operating System: Linux
OS Version: 5.2.0-2-amd64
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>