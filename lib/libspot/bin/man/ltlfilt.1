.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.
.TH LTLFILT "1" "September 2019" "ltlfilt (spot) 2.8.2" "User Commands"
.SH NAME
ltlfilt \- filter files or lists of LTL/PSL formulas
.SH SYNOPSIS
.B ltlfilt
[\fI\,OPTION\/\fR...] [\fI\,FILENAME\/\fR[\fI\,/COL\/\fR]...]
.SH DESCRIPTION
.\" Add any additional description here
.PP
Read a list of formulas and output them back after some optional processing.
.SS "Input options:"
.TP
\fB\-f\fR, \fB\-\-formula\fR=\fI\,STRING\/\fR
process the formula STRING
.TP
\fB\-F\fR, \fB\-\-file\fR=\fI\,FILENAME\/\fR[\fI\,/COL\/\fR]\fI\,\/\fR
process each line of FILENAME as a formula; if COL
is a positive integer, assume a CSV file and read
column COL; use a negative COL to drop the first
line of the CSV file
.TP
\fB\-\-lbt\-input\fR
read all formulas using LBT's prefix syntax
.TP
\fB\-\-lenient\fR
parenthesized blocks that cannot be parsed as
subformulas are considered as atomic properties
.SS "Error handling:"
.TP
\fB\-\-drop\-errors\fR
discard erroneous lines (default)
.TP
\fB\-\-ignore\-errors\fR
do not report syntax errors
.TP
\fB\-\-skip\-errors\fR
output erroneous lines as\-is without processing
.SS "Transformation options:"
.TP
\fB\-\-boolean\-to\-isop\fR
rewrite Boolean subformulas as irredundant sum of
products (implies at least \fB\-r1\fR)
.TP
\fB\-\-define\fR[=\fI\,FILENAME\/\fR]
when used with \fB\-\-relabel\fR or \fB\-\-relabel\-bool\fR, output
the relabeling map using #define statements
.TP
\fB\-\-exclusive\-ap\fR=\fI\,AP\/\fR,AP,...
if any of those APs occur in the formula, add
a term ensuring two of them may not be true at the
same time.  Use this option multiple times to
declare independent groups of exclusive
propositions.
.TP
\fB\-\-from\-ltlf\fR[=\fI\,alive\/\fR]
transform LTLf (finite LTL) to LTL by introducing
some 'alive' proposition
.TP
\fB\-\-negate\fR
negate each formula
.TP
\fB\-\-nnf\fR
rewrite formulas in negative normal form
.TP
\fB\-\-relabel\fR[=\fI\,abc\/\fR|\fI\,pnn\/\fR]
relabel all atomic propositions, alphabetically
unless specified otherwise
.TP
\fB\-\-relabel\-bool\fR[=\fI\,abc\/\fR|\fI\,pnn\/\fR]
relabel Boolean subexpressions, alphabetically
unless specified otherwise
.TP
\fB\-\-remove\-wm\fR
rewrite operators W and M using U and R (this is
an alias for \fB\-\-unabbreviate\fR=\fI\,WM)\/\fR
.TP
\fB\-\-remove\-x\fR
remove X operators (valid only for
stutter\-insensitive properties)
.TP
\fB\-r\fR, \fB\-\-simplify\fR[=\fI\,LEVEL\/\fR]
simplify formulas according to LEVEL (see below);
LEVEL is set to 3 if omitted
.TP
\fB\-\-unabbreviate\fR[=\fI\,STR\/\fR]
remove all occurrences of the operators specified
by STR, which must be a substring of "eFGiMRW^",
where 'e', 'i', and '^' stand respectively for
<\->, \->, and xor.  If no argument is passed, the
subset "eFGiMW^" is used.
.PP
The simplification LEVEL may be set as follows.
.TP
0
No rewriting
.TP
1
basic rewritings and eventual/universal rules
.TP
2
additional syntactic implication rules
.TP
3
better implications using containment
.SS "Filtering options (matching is done after transformation):"
.TP
\fB\-\-accept\-word\fR=\fI\,WORD\/\fR
keep formulas that accept WORD
.TP
\fB\-\-ap\fR=\fI\,RANGE\/\fR
match formulas with a number of atomic
propositions in RANGE
.TP
\fB\-\-boolean\fR
match Boolean formulas
.TP
\fB\-\-bsize\fR=\fI\,RANGE\/\fR
match formulas with Boolean size in RANGE
.TP
\fB\-\-equivalent\-to\fR=\fI\,FORMULA\/\fR
match formulas equivalent to FORMULA
.TP
\fB\-\-eventual\fR
match pure eventualities
.TP
\fB\-\-guarantee\fR
match guarantee formulas (even pathological)
.TP
\fB\-\-implied\-by\fR=\fI\,FORMULA\/\fR
match formulas implied by FORMULA
.TP
\fB\-\-imply\fR=\fI\,FORMULA\/\fR
match formulas implying FORMULA
.TP
\fB\-\-liveness\fR
match liveness properties
.TP
\fB\-\-ltl\fR
match only LTL formulas (no PSL operator)
.TP
\fB\-\-obligation\fR
match obligation formulas (even pathological)
.TP
\fB\-\-persistence\fR
match persistence formulas (even pathological)
.TP
\fB\-\-recurrence\fR
match recurrence formulas (even pathological)
.TP
\fB\-\-reject\-word\fR=\fI\,WORD\/\fR
keep formulas that reject WORD
.TP
\fB\-\-safety\fR
match safety formulas (even pathological)
.TP
\fB\-\-size\fR=\fI\,RANGE\/\fR
match formulas with size in RANGE
.TP
\fB\-\-stutter\-insensitive\fR, \fB\-\-stutter\-invariant\fR
match stutter\-insensitive LTL formulas
.TP
\fB\-\-suspendable\fR
synonym for \fB\-\-universal\fR \fB\-\-eventual\fR
.TP
\fB\-\-syntactic\-guarantee\fR
match syntactic\-guarantee formulas
.TP
\fB\-\-syntactic\-obligation\fR
match syntactic\-obligation formulas
.TP
\fB\-\-syntactic\-persistence\fR
match syntactic\-persistence formulas
.TP
\fB\-\-syntactic\-recurrence\fR
match syntactic\-recurrence formulas
.TP
\fB\-\-syntactic\-safety\fR
match syntactic\-safety formulas
.TP
\fB\-\-syntactic\-stutter\-invariant\fR, \fB\-\-nox\fR
match stutter\-invariant formulas syntactically
(LTL\-X or siPSL)
.TP
\fB\-\-universal\fR
match purely universal formulas
.TP
\fB\-u\fR, \fB\-\-unique\fR
drop formulas that have already been output (not
affected by \fB\-v\fR)
.TP
\fB\-v\fR, \fB\-\-invert\-match\fR
select non\-matching formulas
.PP
RANGE may have one of the following forms: 'INT', 'INT..INT', '..INT', or
\&'INT..'
.PP
WORD is lasso\-shaped and written as 'BF;BF;...;BF;cycle{BF;...;BF}' where BF
are arbitrary Boolean formulas.  The 'cycle{...}' part is mandatory, but the
prefix can be omitted.
.SS "Output options:"
.TP
\fB\-0\fR, \fB\-\-zero\-terminated\-output\fR
separate output formulas with \e0 instead of \en
(for use with xargs \fB\-0\fR)
.TP
\fB\-8\fR, \fB\-\-utf8\fR
output using UTF\-8 characters
.TP
\fB\-c\fR, \fB\-\-count\fR
print only a count of matched formulas
.TP
\fB\-\-format\fR=\fI\,FORMAT\/\fR, \fB\-\-stats\fR=\fI\,FORMAT\/\fR
specify how each line should be output (default:
"%f")
.TP
\fB\-l\fR, \fB\-\-lbt\fR
output in LBT's syntax
.TP
\fB\-\-latex\fR
output using LaTeX macros
.TP
\fB\-n\fR, \fB\-\-max\-count\fR=\fI\,NUM\/\fR
output at most NUM formulas
.TP
\fB\-o\fR, \fB\-\-output\fR=\fI\,FORMAT\/\fR
send output to a file named FORMAT instead of
standard output.  The first formula sent to a file
truncates it unless FORMAT starts with '>>'.
.TP
\fB\-p\fR, \fB\-\-full\-parentheses\fR
output fully\-parenthesized formulas
.TP
\fB\-q\fR, \fB\-\-quiet\fR
suppress all normal output
.TP
\fB\-s\fR, \fB\-\-spin\fR
output in Spin's syntax
.TP
\fB\-\-spot\fR
output in Spot's syntax (default)
.TP
\fB\-\-wring\fR
output in Wring's syntax
.PP
The FORMAT string passed to \fB\-\-format\fR may use the following interpreted
sequences:
.TP
%<
the part of the line before the formula if it
comes from a column extracted from a CSV file
.TP
%>
the part of the line after the formula if it comes
from a column extracted from a CSV file
.TP
%%
a single %
.TP
%b
the Boolean\-length of the formula (i.e., all
Boolean subformulas count as 1)
.TP
%f
the formula (in the selected syntax)
.TP
%F
the name of the input file
.TP
%h, %[vw]h
the class of the formula is the Manna\-Pnueli
hierarchy ([v] replaces abbreviations by class
names, [w] for all compatible classes)
.TP
%L
the original line number in the input file
.TP
%[OP]n
the nesting depth of operator OP.  OP should be a
single letter denoting the operator to count, or
multiple letters to fuse several operators during
depth evaluation.  Add '~' to rewrite the formula
in negative normal form before counting.
.TP
%r
wall\-clock time elapsed in seconds (excluding
parsing)
.TP
%R, %[LETTERS]R
CPU time (excluding parsing), in seconds; Add
LETTERS to restrict to(u) user time, (s) system
time, (p) parent process, or (c) children
processes.
.TP
%s
the length (or size) of the formula
.TP
%x, %[LETTERS]X, %[LETTERS]x
number of atomic propositions used in the
.TP
formula;
add LETTERS to list atomic propositions
.TP
with (n) no quoting, (s) occasional double\-quotes
with C\-style escape, (d) double\-quotes with
C\-style escape, (c) double\-quotes with CSV\-style
escape, (p) between parentheses, any extra
non\-alphanumeric character will be used to
separate propositions
.SS "Miscellaneous options:"
.TP
\fB\-\-help\fR
print this help
.TP
\fB\-\-version\fR
print program version
.PP
Mandatory or optional arguments to long options are also mandatory or optional
for any corresponding short options.
.SS "Exit status:"
.TP
0
if some formulas were output (skipped syntax errors do not count)
.TP
1
if no formulas were output (no match)
.TP
2
if any error has been reported
.SH BIBLIOGRAPHY
If you would like to give a reference to this tool in an article,
we suggest you cite the following paper:
.TP
\(bu
Alexandre Duret-Lutz: Manipulating LTL formulas using Spot 1.0.
Proceedings of ATVA'13.  LNCS 8172.
.PP
The following papers describe algorithms used by ltlfilt:
.TP
\(bu
Kousha Etessami: A note on a question of Peled and Wilke regarding
stutter-invariant LTL. Information Processing Letters 75(6): 261-263
(2000).

Describes the transformation behind the \fB\-\-remove\-x\fR option.
.TP
\(bu
Thibaud Michaud and Alexandre Duret-Lutz:
Practical stutter-invariance checks for ω-regular languages.
Proceedings of SPIN'15.  LNCS 9232.

Describes the algorithm used by \fB\-\-stutter\-insensitive\fR option.
.TP
\(bu
Christian Dax, Jochen Eisinger, Felix Klaedtke: Mechanizing the
Powerset Construction for Restricted Classes of
ω-Automata. Proceedings of ATVA'07.  LNCS 4762.

Describes the checks implemented by the \fB\-\-safety\fR,
\fB\-\-guarantee\fR, and \fB\-\-obligation\fR options.
.TP
\(bu
Ivana Černá, Radek Pelánek: Relating Hierarchy of Temporal Properties
to Model Checking.  Proceedings of MFCS'03.  LNCS 2747.

Describes the syntactic LTL classes matched by the
\fB\-\-syntactic\-safety\fR, \fB\-\-syntactic\-guarantee\fR,
\fB\-\-syntactic\-obligation\fR options,
\fB\-\-syntactic\-persistence\fR, and \fB\-\-syntactic\-recurrence\fR
options.
.TP
\(bu
Kousha Etessami, Gerard J. Holzmann: Optimizing Büchi
Automata. Proceedings of CONCUR'00.  LNCS 1877.

Describe the syntactic LTL classes matched by \fB\-\-eventual\fR, and
\fB\-\-universal\fR.
.TP
\(bu
Giuseppe De Giacomo, Moshe Y. Vardi: Linear Temporal Logic and
Linear Dynamic Logic on Finite Traces.  Proceedings of IJCAI'13.

Describe the transformation implemented by \fB\-\-from\-ltlf\fR
to reduce LTLf model checking to LTL model checking.
.SH "REPORTING BUGS"
Report bugs to <spot@lrde.epita.fr>.
.SH COPYRIGHT
Copyright \(co 2019  Laboratoire de Recherche et Développement de l'Epita.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
.br
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.SH "SEE ALSO"
.BR randltl (1),
.BR ltldo (1)
